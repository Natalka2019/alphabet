{"version":3,"sources":["containers/List/styles.module.scss","pages/Employees/styles.module.scss","containers/Selected/styles.module.scss","pages/Home/styles.module.scss","components/RadioButton/styles.module.scss","components/RadioButtonsList/styles.module.scss","components/NavigationButton/styles.module.scss","pages/Home/index.tsx","utilities/alphabet.ts","utilities/sortByLastName.ts","utilities/sortByMonth.ts","utilities/getYear.ts","components/RadioButton/index.tsx","components/RadioButtonsList/index.tsx","components/NavigationButton/index.tsx","store/actionTypes.ts","store/actions.tsx","containers/List/index.tsx","containers/Selected/index.tsx","utilities/getDayMonth.ts","pages/Employees/index.tsx","App.tsx","reportWebVitals.ts","store/reducers.tsx","store/services.tsx","store/sagas.tsx","store/index.tsx","index.tsx"],"names":["module","exports","Home","className","styles","container","to","link","alphabet","toUpperCase","split","sortByLastName","a","b","lowerCaseA","lastName","toLowerCase","lowerCaseB","currentMonth","Date","getMonth","sortByMonth","date1","dob","date2","n1","n2","getYear","date","toLocaleString","year","RadioButton","id","value","label","name","isChecked","onRadioButtonChange","type","checked","onChange","htmlFor","RadioButtonList","options","onOptionChange","initialValue","useState","setChecked","handleChange","event","target","map","el","NavigationButton","title","onClick","button","GET_EMPLOYEES","GET_EMPLOYEES_SUCCESS","ADD_TO_SELECTED_LIST","REMOVE_FROM_SELECTED_LIST","getEmployeesFailed","payload","List","list","dispatch","useDispatch","start","setStart","selectedList","useSelector","state","listToRender","slice","statusOptions","handleOptionChange","status","employeeId","actionTypes","actions","findStatus","find","findStyle","pagination","prevStart","backButton","length","nextButton","lettersContainer","letter","letterContainer","employeesList","filter","employee","firstName","nameContainer","RadioButtonsList","Selected","sortedList","sort","groups","reduce","acc","val","month","Intl","DateTimeFormat","format","concat","noSelectedData","monthsContainer","Object","entries","key","monthContainer","monthTitle","day","Employees","useEffect","sortedEmployeesList","loadingMessage","smallContainer","sectionTitle","sectionContent","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialState","RootReducer","action","selectedEmployee","updatedList","getEmployees","fetch","response","json","data","fetchEmployees","watch","call","API","put","console","log","all","takeEvery","persistConfig","storage","persistedReducer","persistReducer","rootReducer","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","createStore","applyMiddleware","run","rootSaga","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,WAAa,2BAA2B,WAAa,2BAA2B,WAAa,2BAA2B,iBAAmB,iCAAiC,gBAAkB,gCAAgC,OAAS,uBAAuB,cAAgB,8BAA8B,cAAgB,8BAA8B,KAAO,qBAAqB,SAAW,2B,mBCAzbD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,+BAA+B,aAAe,6BAA6B,eAAiB,+BAA+B,eAAiB,iC,mBCArND,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,+BAA+B,gBAAkB,gCAAgC,eAAiB,+BAA+B,WAAa,2BAA2B,cAAgB,gC,mBCAlQD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,6KCaZC,EAVQ,WACrB,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CAAMC,GAAG,aAAaH,UAAWC,IAAOG,KAAxC,qC,0CCPOC,EAAW,6BACrBC,cACEC,MAAM,ICAEC,EAAiB,SAACC,EAAcC,GAC3C,IAAIC,EAAaF,EAAEG,SAASC,cACxBC,EAAaJ,EAAEE,SAASC,cAC5B,OAAIF,EAAaG,GAAoB,EACjCH,EAAaG,EAAmB,EAC7B,GCLHC,GAAe,IAAIC,MAAOC,WAEnBC,EAAc,SAACT,EAAcC,GACxC,IAAIS,EAAQ,IAAIH,KAAKP,EAAEW,KACnBC,EAAQ,IAAIL,KAAKN,EAAEU,KAEnBE,EAAKH,EAAMF,WACXM,EAAKF,EAAMJ,WAOf,OANIK,EAAKP,IACPO,GAAU,IAERC,EAAKR,IACPQ,GAAU,IAELD,EAAKC,GChBAC,EAAU,SAACC,GAEvB,OADgB,IAAIT,KAAKS,GACVC,eAAe,QAAS,CACrCC,KAAM,a,iBCgCKC,EAvBsB,SAAC,GAO/B,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,KAGI,IAFJC,iBAEI,SADJC,EACI,EADJA,oBAEA,OACE,sBAAKlC,UAAWC,IAAOC,UAAvB,UACE,uBACEiC,KAAK,QACLN,GAAIA,EACJC,MAAOA,EACPE,KAAMA,EACNI,QAASH,EACTI,SAAUH,IAEZ,uBAAOI,QAAST,EAAhB,SAAqBE,Q,iBCoBZQ,EAjC0B,SAAC,GAMnC,IALLV,EAKI,EALJA,GACAG,EAII,EAJJA,KACAQ,EAGI,EAHJA,QACAC,EAEI,EAFJA,eACAC,EACI,EADJA,aAEA,EAA8BC,mBAASD,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KAEMC,EAAe,SAACC,GACpBF,EAAWE,EAAMC,QACjBN,EAAeK,EAAMC,OAAOlB,KAG9B,OACE,qBAAK7B,UAAWC,IAAOC,UAAvB,SACGsC,EAAQQ,KAAI,SAACC,GACZ,OACE,cAAC,EAAD,CAEEpB,GAAE,UAAKoB,EAAGnB,MAAR,YAAiBD,GACnBC,MAAOmB,EAAGnB,MACVC,MAAOkB,EAAGlB,MACVC,KAAMA,EACNE,oBAAqBW,EACrBZ,UAAWG,EAAQN,QAAUmB,EAAGnB,OAPlC,UACUmB,EAAGnB,MADb,YACsBD,U,iBCfjBqB,EAZ2B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASpD,EAAgB,EAAhBA,UAC3D,OACE,wBACEA,UAAS,UAAKC,IAAOoD,OAAZ,YAAsBrD,GAC/BmC,KAAK,SACLiB,QAASA,EAHX,SAKGD,KChBMG,EAAgB,gBAChBC,EAAwB,wBAExBC,EAAuB,uBACvBC,EAA4B,4BCYlC,SAASC,EAAmBC,GACjC,MAAO,CACLxB,KDhBgC,uBCiBhCwB,WCNJ,IAkGeC,EAlGe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzBC,EAAWC,cACjB,EAA0BpB,mBAAS,GAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KAEMC,EAAeC,aAAY,SAACC,GAAD,OAAkBA,EAAMF,gBAEnDG,EAAehE,EAASiE,MAAMN,EAAOA,EAAQ,GAC7CO,EAAgB,CACpB,CACEzC,MAAO,OACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,eAILyC,EAAqB,SAAC3C,GAC1B,IAAM4C,EAAS5C,EAAGtB,MAAM,KAAK,GACvBmE,EAAa7C,EAAGtB,MAAM,KAAK,GAE/BuD,EADa,SAAXW,EDVC,CACLtC,KAAMwC,EACNhB,QCSqCe,GDNlC,SAAgCf,GACrC,MAAO,CACLxB,KAAMwC,EACNhB,WCKWiB,CAA+BF,KAItCG,EAAa,SAAChD,GAElB,OADuBqC,EAAaY,MAAK,SAAC7B,GAAD,OAAQA,EAAGpB,KAAOA,KACnC0C,EAAc,GAAKA,EAAc,IAGrDQ,EAAY,SAAClD,GAEjB,OADuBqC,EAAaY,MAAK,SAAC7B,GAAD,OAAQA,EAAGpB,KAAOA,KACnC,WAAa,IAGvC,OACE,sBAAK7B,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAO+E,WAAvB,UACGhB,EAAQ,GACP,cAAC,EAAD,CACEb,MAAM,WACNC,QAAS,kBAAMa,GAAS,SAACgB,GAAD,OAAeA,EAAY,MACnDjF,UAAWC,IAAOiF,aAGrBlB,EAAQ3D,EAAS8E,OAAS,GACzB,cAAC,EAAD,CACEhC,MAAM,OACNC,QAAS,kBAAMa,GAAS,SAACgB,GAAD,OAAeA,EAAY,MACnDjF,UAAWC,IAAOmF,gBAIxB,oBAAIpF,UAAWC,IAAOoF,iBAAtB,SACGhB,EAAarB,KAAI,SAACsC,GACjB,OACE,qBAAItF,UAAWC,IAAOsF,gBAAtB,UACE,qBAAKvF,UAAWC,IAAOqF,OAAvB,SAAgCA,IAChC,oBAAItF,UAAWC,IAAOuF,cAAtB,SAEgB,KADT,OAAJ3B,QAAI,IAAJA,OAAA,EAAAA,EAAM4B,QAAO,SAACC,GAAD,OAAcA,EAAS9E,SAAS,KAAO0E,KAClDH,QACD,oBAAInF,UAAWC,IAAO+B,KAAtB,kBAFD,OAIC6B,QAJD,IAICA,OAJD,EAICA,EACI4B,QAAO,SAACC,GAAD,OAAcA,EAAS9E,SAAS,KAAO0E,KAC/CtC,KAAI,YAAkC,IAA/BnB,EAA8B,EAA9BA,GAAI8D,EAA0B,EAA1BA,UAAW/E,EAAe,EAAfA,SACrB,OACE,qBAAIZ,UAAWC,IAAO2F,cAAtB,UACE,sBACE5F,UAAS,UAAKC,IAAO+B,KAAZ,YACP/B,IAAO8E,EAAUlD,KAFrB,UAKGjB,EALH,IAKc+E,KAEd,cAACE,EAAD,CACE7D,KAAI,UAAKH,GACTA,GAAE,UAAKA,GACPW,QAAS+B,EACT9B,eAAgB+B,EAChB9B,aAAcmC,EAAWhD,OAbaA,UAXVyD,Y,iBCrBzCQ,EAxCY,WACzB,IAAM5B,EAAeC,aAAY,SAACC,GAAD,OAAkBA,EAAMF,gBACnD6B,EAAU,OAAG7B,QAAH,IAAGA,OAAH,EAAGA,EAAc8B,KAAK9E,GAEhC+E,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAYG,QAAO,SAACC,EAAUC,GAC3C,IAAI3E,EAAO,IAAIT,KAAKoF,EAAIhF,KACpBiF,EAAgB,IAAIC,KAAKC,eAAe,QAAS,CACnDF,MAAO,SACNG,OAAO/E,GAIV,OAHA0E,EAAIE,GAAU,GAAWI,OAAON,EAAIE,IAAU,GAAID,GAClDD,EAAIE,GAAOL,KAAKxF,GAET2F,IACN,IAEH,OACE,sBAAKnG,UAAWC,IAAOC,UAAvB,UAC4B,KAAb,OAAZgE,QAAY,IAAZA,OAAA,EAAAA,EAAciB,SACb,qBAAKnF,UAAWC,IAAOyG,eAAvB,qCAEF,oBAAI1G,UAAWC,IAAO0G,gBAAtB,UACe,OAAZzC,QAAY,IAAZA,OAAA,EAAAA,EAAciB,QAAS,GACtByB,OAAOC,QAAQZ,GAAQjD,KAAI,mCAAE8D,EAAF,KAAOhF,EAAP,YACzB,qBAAI9B,UAAWC,IAAO8G,eAAtB,UACE,qBAAK/G,UAAWC,IAAO+G,WAAvB,SAAoCF,IACpC,oBAAI9G,UAAWC,IAAOuF,cAAtB,SACI1D,EAAsBkB,KAAI,SAACC,GAAD,OAC1B,+BACGA,EAAGrC,SADN,IACiBqC,EAAG0C,UADpB,OCtCWlE,EDuCmCwB,EAAG7B,ICtCjD,IAAIJ,KAAKS,GACVC,eAAe,QAAS,CACrCuF,IAAK,UACLZ,MAAO,UDkCO,IACwD,IACrD7E,EAAQyB,EAAG7B,KAFd,UAAS6B,EAAGpB,ICtCF,IAACJ,SDkC0BqF,YEgBxCI,EA1Ca,WAC1B,IAAMpD,EAAWC,cAEjBoD,qBAAU,WACRrD,EJRK,CACL3B,KAAMwC,MIQL,CAACb,IAEJ,IAAM0B,EAAgBrB,aAAY,SAACC,GAAD,OAAkBA,EAAMoB,iBAEpD4B,EAAmB,OAAG5B,QAAH,IAAGA,OAAH,EAAGA,EAAeQ,KAAKxF,GAEhD,OAAsB,OAAlBgF,EAEA,qBAAKxF,UAAWC,IAAOC,UAAvB,SACE,qBAAKF,UAAWC,IAAOoH,eAAvB,kDAOJ,sBAAKrH,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOqH,eAAvB,UACE,qBAAKtH,UAAWC,IAAOsH,aAAvB,SACE,6CAEF,qBAAKvH,UAAWC,IAAOuH,eAAvB,SACE,cAAC,EAAD,CAAM3D,KAAMuD,SAGhB,sBAAKpH,UAAWC,IAAOqH,eAAvB,UACE,qBAAKtH,UAAWC,IAAOsH,aAAvB,SACE,sDAEF,qBAAKvH,UAAWC,IAAOuH,eAAvB,SACE,cAAC,EAAD,a,MCrBKC,MAjBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,YAAjB,SACE,qBAAK1H,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2H,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,cCAGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iECLRQ,EAAsB,CAC1B9C,cAAe,KACftB,aAAc,IA6CDqE,GA1CqB,WAA0C,IAAzCnE,EAAwC,uDAAhCkE,EAAcE,EAAkB,uCAC3E,OAAQA,EAAOrG,MACb,KAAKwC,EACH,IAAQhB,EAAY6E,EAAZ7E,QACR,OAAO,2BACFS,GADL,IAEEoB,cAAe7B,IAGnB,KAAKgB,EACH,IACI8D,EADI9E,EAAY6E,EAAZ7E,QAGJS,EAAMoB,gBACRiD,EAAmBrE,EAAMoB,cAAcV,MAAK,SAAC7B,GAAD,OAAQA,EAAGpB,KAAO8B,MAGhE,IAAM+E,EAAcD,EAAgB,sBAC5BrE,EAAMF,cADsB,CACRuE,IADQ,YAE5BrE,EAAMF,cAEd,OAAO,2BACFE,GADL,IAEEF,aAAcwE,IAGlB,KAAK/D,EACH,IAAQhB,EAAY6E,EAAZ7E,QAEF+E,EAActE,EAAMF,aAAauB,QAAO,SAACxC,GAAD,OAAQA,EAAGpB,KAAO8B,KAEhE,OAAO,2BACFS,GADL,IAEEF,aAAcwE,IAGlB,QACE,OAAOtE,I,sCC9CAuE,GAAY,yCAAG,+BAAAlI,EAAA,sEACHmI,MAAM,kEADH,cACpBC,EADoB,gBAIPA,EAASC,OAJF,cAIpBC,EAJoB,yBAKnBA,GALmB,2CAAH,qD,aCMfC,I,aAUeC,IAVzB,SAAUD,KAAV,wEAEkC,OAFlC,kBAEwCE,aAAKC,IAF7C,OAGI,OADMN,EAFV,gBAGUO,aTCD,CACLjH,KAAMwC,EACNhB,QSHsCkF,IAH1C,8BAMI,OANJ,yBAKIQ,QAAQC,IAAR,MALJ,UAMUF,aAAIxE,EAAA,OANd,sDAUe,SAAUqE,KAAV,kEACb,OADa,SACPM,aAAI,CAACC,aAAU7E,EAA2BqE,MADnC,wCCRf,IAAMS,GAAgB,CACpB3C,IAAK,OACL4C,aAGIC,GAAmBC,YAAeH,GAAeI,IAEjDC,GAAiBC,cAEjBC,GAAc,CAACF,GAAgBG,KAC/BC,GAAQC,YAAYR,GAAkBS,IAAe,WAAf,EAAmBJ,KAC/DF,GAAeO,IAAIC,IACnB,IAAMC,GAAYC,YAAaN,I,SCX/BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaU,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,SAM1BjD,M","file":"static/js/main.5406b3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__5EaE-\",\"pagination\":\"styles_pagination__3hZjE\",\"backButton\":\"styles_backButton__3g8hm\",\"nextButton\":\"styles_nextButton__G-Zd2\",\"lettersContainer\":\"styles_lettersContainer__2qRJo\",\"letterContainer\":\"styles_letterContainer__QeofF\",\"letter\":\"styles_letter__1uuGl\",\"employeesList\":\"styles_employeesList__2hUlG\",\"nameContainer\":\"styles_nameContainer__15hnP\",\"name\":\"styles_name__2z2Wa\",\"selected\":\"styles_selected__3wJvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2DI2l\",\"smallContainer\":\"styles_smallContainer__FVEJq\",\"sectionTitle\":\"styles_sectionTitle__3HUrv\",\"sectionContent\":\"styles_sectionContent__3RbJg\",\"loadingMessage\":\"styles_loadingMessage__Nc0gY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1mbBt\",\"noSelectedData\":\"styles_noSelectedData__cIb_Z\",\"monthsContainer\":\"styles_monthsContainer__EqY4Z\",\"monthContainer\":\"styles_monthContainer__mQc06\",\"monthTitle\":\"styles_monthTitle__3nQuu\",\"employeesList\":\"styles_employeesList__3eSya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__ttgLw\",\"link\":\"styles_link__1lty8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__11MSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2Q4W9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__Os48J\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.scss\";\n\nconst Home: React.FC = () => {\n  return (\n    <div className={styles.container}>\n      <Link to=\"/employees\" className={styles.link}>\n        Visit Employees page\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","export const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  .toUpperCase()\n    .split('')","import {IEmployee} from '../models';\n\nexport const sortByLastName = (a: IEmployee, b: IEmployee) => {\n  let lowerCaseA = a.lastName.toLowerCase();\n  let lowerCaseB = b.lastName.toLowerCase();\n  if (lowerCaseA < lowerCaseB) return -1;\n  if (lowerCaseA > lowerCaseB) return 1;\n  return 0;\n};","import {IEmployee} from '../models';\n\nconst currentMonth = new Date().getMonth();\n\nexport const sortByMonth = (a: IEmployee, b: IEmployee) => {\n  let date1 = new Date(a.dob);\n  let date2 = new Date(b.dob);\n\n  let n1 = date1.getMonth();\n  let n2 = date2.getMonth();\n  if (n1 < currentMonth) {\n    n1 = n1 + 12;\n  }\n  if (n2 < currentMonth) {\n    n2 = n2 + 12;\n  }\n  return n1 - n2;\n};\n","export  const getYear = (date: string) => {\n  const newDate = new Date(date);\n  return newDate.toLocaleString(\"en-UK\", {\n    year: \"numeric\",\n  });\n};","import React from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  id: string;\n  value: string;\n  label: string;\n  name: string;\n  isChecked: boolean;\n  onRadioButtonChange: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst RadioButton: React.FC<Props> = ({\n  id,\n  value,\n  label,\n  name,\n  isChecked = false,\n  onRadioButtonChange,\n}) => {\n  return (\n    <div className={styles.container}>\n      <input\n        type=\"radio\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        onChange={onRadioButtonChange}\n      ></input>\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import React, { useState } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport RadioButton from \"../RadioButton\";\n\ninterface StatusOption {\n  value: string;\n  label: string;\n}\n\ninterface Props {\n  id: string;\n  name: string;\n  options: StatusOption[];\n  onOptionChange: (selectedEl: string) => void;\n  initialValue: StatusOption;\n}\n\nconst RadioButtonList: React.FC<Props> = ({\n  id,\n  name,\n  options,\n  onOptionChange,\n  initialValue,\n}) => {\n  const [checked, setChecked] = useState(initialValue);\n\n  const handleChange = (event: any) => {\n    setChecked(event.target);\n    onOptionChange(event.target.id);\n  };\n\n  return (\n    <div className={styles.container}>\n      {options.map((el) => {\n        return (\n          <RadioButton\n            key={`${el.value}-${id}`}\n            id={`${el.value}-${id}`}\n            value={el.value}\n            label={el.label}\n            name={name}\n            onRadioButtonChange={handleChange}\n            isChecked={checked.value === el.value}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RadioButtonList;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface Props {\n  title: string;\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\n  className: string;\n}\n\nconst NavigationButton: React.FC<Props> = ({ title, onClick, className }) => {\n  return (\n    <button\n      className={`${styles.button} ${className}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default NavigationButton;\n","export const GET_EMPLOYEES = 'GET_EMPLOYEES';\nexport const GET_EMPLOYEES_SUCCESS = 'GET_EMPLOYEES_SUCCESS';\nexport const GET_EMPLOYEES_FAILED = 'GET_EMPLOYEES_FAILED';\nexport const ADD_TO_SELECTED_LIST = 'ADD_TO_SELECTED_LIST';\nexport const REMOVE_FROM_SELECTED_LIST = 'REMOVE_FROM_SELECTED_LIST';","import * as actionTypes from \"./actionTypes\";\nimport { IEmployee } from \"../models\";\n\nexport function getEmployees() {\n  return {\n    type: actionTypes.GET_EMPLOYEES,\n  };\n}\n\nexport function getEmployeesSuccess(payload: IEmployee[]) {\n  return {\n    type: actionTypes.GET_EMPLOYEES_SUCCESS,\n    payload,\n  };\n}\n\nexport function getEmployeesFailed(payload: string) {\n  return {\n    type: actionTypes.GET_EMPLOYEES_FAILED,\n    payload,\n  };\n}\n\nexport function addToSelectedList(payload: string) {\n  return {\n    type: actionTypes.ADD_TO_SELECTED_LIST,\n    payload,\n  };\n}\nexport function removeFromSelectedList(payload: string) {\n  return {\n    type: actionTypes.REMOVE_FROM_SELECTED_LIST,\n    payload,\n  };\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./styles.module.scss\";\nimport { IEmployee } from \"../../models\";\nimport { alphabet } from \"../../utilities\";\nimport { RadioButtonsList, NavigationButton } from \"../../components\";\nimport * as actions from \"../../store/actions\";\nimport { State } from \"../../models\";\n\ninterface Props {\n  list: IEmployee[] | undefined;\n}\n\nconst List: React.FC<Props> = ({ list }) => {\n  const dispatch = useDispatch();\n  const [start, setStart] = useState(0);\n\n  const selectedList = useSelector((state: State) => state.selectedList);\n\n  const listToRender = alphabet.slice(start, start + 3);\n  const statusOptions = [\n    {\n      value: \"true\",\n      label: \"active\",\n    },\n    {\n      value: \"false\",\n      label: \"not active\",\n    },\n  ];\n\n  const handleOptionChange = (id: string) => {\n    const status = id.split(\"-\")[0];\n    const employeeId = id.split(\"-\")[1];\n    if (status === \"true\") {\n      dispatch(actions.addToSelectedList(employeeId));\n    } else {\n      dispatch(actions.removeFromSelectedList(employeeId));\n    }\n  };\n\n  const findStatus = (id: string) => {\n    const activeEmployee = selectedList.find((el) => el.id === id);\n    return activeEmployee ? statusOptions[0] : statusOptions[1];\n  };\n\n  const findStyle = (id: string) => {\n    const activeEmployee = selectedList.find((el) => el.id === id);\n    return activeEmployee ? \"selected\" : \"\";\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.pagination}>\n        {start > 2 && (\n          <NavigationButton\n            title=\"Previous\"\n            onClick={() => setStart((prevStart) => prevStart - 3)}\n            className={styles.backButton}\n          />\n        )}\n        {start < alphabet.length - 2 && (\n          <NavigationButton\n            title=\"Next\"\n            onClick={() => setStart((prevStart) => prevStart + 3)}\n            className={styles.nextButton}\n          />\n        )}\n      </div>\n      <ul className={styles.lettersContainer}>\n        {listToRender.map((letter) => {\n          return (\n            <li className={styles.letterContainer} key={letter}>\n              <div className={styles.letter}>{letter}</div>\n              <ul className={styles.employeesList}>\n                {list?.filter((employee) => employee.lastName[0] === letter)\n                  .length === 0 ? (\n                  <li className={styles.name}>----</li>\n                ) : (\n                  list\n                    ?.filter((employee) => employee.lastName[0] === letter)\n                    .map(({ id, firstName, lastName }) => {\n                      return (\n                        <li className={styles.nameContainer} key={id}>\n                          <div\n                            className={`${styles.name} ${\n                              styles[findStyle(id)]\n                            }`}\n                          >\n                            {lastName} {firstName}\n                          </div>\n                          <RadioButtonsList\n                            name={`${id}`}\n                            id={`${id}`}\n                            options={statusOptions}\n                            onOptionChange={handleOptionChange}\n                            initialValue={findStatus(id)}\n                          />\n                        </li>\n                      );\n                    })\n                )}\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { State, IEmployee } from \"../../models\";\nimport styles from \"./styles.module.scss\";\nimport {\n  sortByLastName,\n  sortByMonth,\n  getYear,\n  getDayMonth,\n} from \"../../utilities\";\n\nconst Selected: React.FC = () => {\n  const selectedList = useSelector((state: State) => state.selectedList);\n  const sortedList = selectedList?.sort(sortByMonth);\n\n  const groups = sortedList?.reduce((acc: any, val: IEmployee) => {\n    let date = new Date(val.dob);\n    let month: string = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"long\",\n    }).format(date);\n    acc[month] = ([] as any).concat(acc[month] || [], val);\n    acc[month].sort(sortByLastName);\n\n    return acc;\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {selectedList?.length === 0 && (\n        <div className={styles.noSelectedData}>Employees List is empty</div>\n      )}\n      <ul className={styles.monthsContainer}>\n        {selectedList?.length > 0 &&\n          Object.entries(groups).map(([key, value]) => (\n            <li className={styles.monthContainer} key={key}>\n              <div className={styles.monthTitle}>{key}</div>\n              <ul className={styles.employeesList}>\n                {(value as IEmployee[]).map((el: IEmployee) => (\n                  <li key={el.id}>\n                    {el.lastName} {el.firstName} - {getDayMonth(el.dob)},{\" \"}\n                    {getYear(el.dob)} year\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Selected;\n","export  const getDayMonth = (date: string) => {\n  const newDate = new Date(date);\n  return newDate.toLocaleString(\"en-UK\", {\n    day: \"numeric\",\n    month: \"long\",\n  });\n};","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./styles.module.scss\";\nimport { List, Selected } from \"../../containers\";\nimport * as actions from \"../../store/actions\";\nimport { State } from \"../../models\";\nimport { sortByLastName } from \"../../utilities\";\n\nconst Employees: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(actions.getEmployees());\n  }, [dispatch]);\n\n  const employeesList = useSelector((state: State) => state.employeesList);\n\n  const sortedEmployeesList = employeesList?.sort(sortByLastName);\n\n  if (employeesList === null) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.loadingMessage}>\n          Wait a moment. Data is loading ...\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.smallContainer}>\n        <div className={styles.sectionTitle}>\n          <h2>Employees</h2>\n        </div>\n        <div className={styles.sectionContent}>\n          <List list={sortedEmployeesList} />\n        </div>\n      </div>\n      <div className={styles.smallContainer}>\n        <div className={styles.sectionTitle}>\n          <h2>Employees birthday</h2>\n        </div>\n        <div className={styles.sectionContent}>\n          <Selected />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Employees } from \"./pages\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router basename=\"/alphabet\">\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/employees\">\n            <Employees />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Reducer } from \"redux\";\nimport * as actionTypes from \"./actionTypes\";\nimport { State } from \"../models\";\n\nconst InitialState: State = {\n  employeesList: null,\n  selectedList: [],\n};\n\nconst RootReducer: Reducer<State> = (state = InitialState, action): State => {\n  switch (action.type) {\n    case actionTypes.GET_EMPLOYEES_SUCCESS: {\n      const { payload } = action;\n      return {\n        ...state,\n        employeesList: payload,\n      };\n    }\n    case actionTypes.ADD_TO_SELECTED_LIST: {\n      const { payload } = action;\n      let selectedEmployee;\n\n      if (state.employeesList) {\n        selectedEmployee = state.employeesList.find((el) => el.id === payload);\n      }\n\n      const updatedList = selectedEmployee\n        ? [...state.selectedList, selectedEmployee]\n        : [...state.selectedList];\n\n      return {\n        ...state,\n        selectedList: updatedList,\n      };\n    }\n    case actionTypes.REMOVE_FROM_SELECTED_LIST: {\n      const { payload } = action;\n\n      const updatedList = state.selectedList.filter((el) => el.id !== payload);\n\n      return {\n        ...state,\n        selectedList: updatedList,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default RootReducer;\n","export const getEmployees = async () => {\n  const response = await fetch(\n    `https://yalantis-react-school-api.yalantis.com/api/task0/users`\n  );\n  const data = await response.json();\n  return data;\n};\n","import { takeEvery, put, call, all } from \"redux-saga/effects\";\nimport * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as API from \"./services\";\nimport { IEmployee } from \"../models\";\n\nfunction* fetchEmployees() {\n  try {\n    const response: IEmployee[] = yield call(API.getEmployees);\n    yield put(actions.getEmployeesSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.getEmployeesFailed(error));\n  }\n}\n\nexport default function* watch() {\n  yield all([takeEvery(actionTypes.GET_EMPLOYEES, fetchEmployees)]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware, thunk];\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}